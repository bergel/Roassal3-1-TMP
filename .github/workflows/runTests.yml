name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run unit tests
        run: bash ./scripts/runTest.sh

  microprint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get microprint of jobs logs
        uses: AlphaSteam/microprint-generator@v2
        with: # None of the inputs are required (though some are really recommended)

            # You can generate microprints of jobs on another repository if needed. By default it expects the job to be on the same repository.
            #
            # Default: ${{ github.repository }}
            repository: ${{ github.repository }}

            # Job that's going to get used for microprint generation. By default it uses the job where the action is called. Not recommended as 
            # the logs don't get generated by the GitHub API until the job has finished all it's steps.
            #
            # Default: ${{ github.job }} (Not recommended!)
            job_name: build

            # Personal access token (PAT) used to fetch the logs of the requested job. If the repo is public, it needs the public-repo scope,
            # if not, repo.
            # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
            #
            # Default: ${{ github.token }}
            github_token: ${{ github.token }}

            # Wether or not to save the logs retrieved with the GitHub API as plain text
            #
            # Default: true 
            save_log: true

            # The name of the plain text logs file (Without the extension)
            #
            # Default: logs
            log_filename: custom_log_name

            # The directory where to save the plain text logs file. It saves it in the root of the repository by default.
            #
            # Default: ./
            log_path: ./

            # The name of the generated microprint (Without extension).
            #
            # Default: microprint
            microprint_filename: custom_microprint_name

            # The directory where to save the generated microprint. It saves it in the root of the repository by default.
            #
            # Default: ./
            microprint_path: ./

            # How to render the microprint. There's two options, 'svg' and 'raster'. The latter has some limitations.
            # Mainly low resolution and lack of custom fonts.
            #
            # Default: svg
            microprint_render_method: svg

            # The directory where the config.json file is located. This file is in charge of hosting the rules for generating the microprint.
            #
            # Default: ./
            microprint_config_path: ./

            # The name for the config file (Without extension).
            #
            # Default: config
            microprint_config_filename: custom_config_name

      # Pull changes before committing
      - name: Pull Remote Changes
        run: git pull

      # Here you can use any action for committing the generated files. But if you don't commit them, they'll be lost.
      - name: Commit microprint
        if: github.ref != 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
            commit_message: Updated custom rules microprint
